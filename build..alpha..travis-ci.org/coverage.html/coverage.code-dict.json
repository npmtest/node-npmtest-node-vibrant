{"/home/travis/build/npmtest/node-npmtest-node-vibrant/test.js":"/* istanbul instrument in package npmtest_node_vibrant */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-node-vibrant/lib.npmtest_node_vibrant.js":"/* istanbul instrument in package npmtest_node_vibrant */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_node_vibrant = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_node_vibrant = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-node-vibrant/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-node-vibrant && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_node_vibrant */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_node_vibrant\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_node_vibrant.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        local.assetsDict['/assets.npmtest_node_vibrant.rollup.js'] =\n            local.assetsDict['/assets.npmtest_node_vibrant.rollup.js'] ||\n            local.fs.readFileSync(\n                // buildCustomOrg-hack\n                local.npmtest_node_vibrant.__dirname +\n                    '/lib.npmtest_node_vibrant.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-node-vibrant/node_modules/node-vibrant/lib/index.js":"var Vibrant;\n\nVibrant = require('./vibrant');\n\nVibrant.DefaultOpts.Image = require('./image/node');\n\nmodule.exports = Vibrant;\n","/home/travis/build/npmtest/node-npmtest-node-vibrant/node_modules/node-vibrant/lib/vibrant.js":"\n/*\n  From Vibrant.js by Jari Zwarts\n  Ported to node.js by AKFish\n\n  Color algorithm class that finds variations on colors in an image.\n\n  Credits\n  --------\n  Lokesh Dhakar (http://www.lokeshdhakar.com) - Created ColorThief\n  Google - Palette support library in Android\n */\nvar Builder, DefaultGenerator, Filter, Swatch, Vibrant, util,\n  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\nSwatch = require('./swatch');\n\nutil = require('./util');\n\nDefaultGenerator = require('./generator').Default;\n\nFilter = require('./filter');\n\nmodule.exports = Vibrant = (function() {\n  Vibrant.DefaultOpts = {\n    colorCount: 64,\n    quality: 5,\n    generator: new DefaultGenerator(),\n    Image: null,\n    Quantizer: require('./quantizer').MMCQ,\n    filters: []\n  };\n\n  Vibrant.from = function(src) {\n    return new Builder(src);\n  };\n\n  Vibrant.prototype.quantize = require('quantize');\n\n  Vibrant.prototype._swatches = [];\n\n  function Vibrant(sourceImage, opts) {\n    this.sourceImage = sourceImage;\n    if (opts == null) {\n      opts = {};\n    }\n    this.swatches = bind(this.swatches, this);\n    this.opts = util.defaults(opts, this.constructor.DefaultOpts);\n    this.generator = this.opts.generator;\n  }\n\n  Vibrant.prototype.getPalette = function(cb) {\n    var image;\n    return image = new this.opts.Image(this.sourceImage, (function(_this) {\n      return function(err, image) {\n        var error, error1;\n        if (err != null) {\n          return cb(err);\n        }\n        try {\n          _this._process(image, _this.opts);\n          return cb(null, _this.swatches());\n        } catch (error1) {\n          error = error1;\n          return cb(error);\n        }\n      };\n    })(this));\n  };\n\n  Vibrant.prototype.getSwatches = function(cb) {\n    return this.getPalette(cb);\n  };\n\n  Vibrant.prototype._process = function(image, opts) {\n    var imageData, quantizer, swatches;\n    image.scaleDown(this.opts);\n    imageData = image.getImageData();\n    quantizer = new this.opts.Quantizer();\n    quantizer.initialize(imageData.data, this.opts);\n    swatches = quantizer.getQuantizedColors();\n    this.generator.generate(swatches);\n    return image.removeCanvas();\n  };\n\n  Vibrant.prototype.swatches = function() {\n    return {\n      Vibrant: this.generator.getVibrantSwatch(),\n      Muted: this.generator.getMutedSwatch(),\n      DarkVibrant: this.generator.getDarkVibrantSwatch(),\n      DarkMuted: this.generator.getDarkMutedSwatch(),\n      LightVibrant: this.generator.getLightVibrantSwatch(),\n      LightMuted: this.generator.getLightMutedSwatch()\n    };\n  };\n\n  return Vibrant;\n\n})();\n\nmodule.exports.Builder = Builder = (function() {\n  function Builder(src1, opts1) {\n    this.src = src1;\n    this.opts = opts1 != null ? opts1 : {};\n    this.opts.filters = util.clone(Vibrant.DefaultOpts.filters);\n  }\n\n  Builder.prototype.maxColorCount = function(n) {\n    this.opts.colorCount = n;\n    return this;\n  };\n\n  Builder.prototype.maxDimension = function(d) {\n    this.opts.maxDimension = d;\n    return this;\n  };\n\n  Builder.prototype.addFilter = function(f) {\n    if (typeof f === 'function') {\n      this.opts.filters.push(f);\n    }\n    return this;\n  };\n\n  Builder.prototype.removeFilter = function(f) {\n    var i;\n    if ((i = this.opts.filters.indexOf(f)) > 0) {\n      this.opts.filters.splice(i);\n    }\n    return this;\n  };\n\n  Builder.prototype.clearFilters = function() {\n    this.opts.filters = [];\n    return this;\n  };\n\n  Builder.prototype.quality = function(q) {\n    this.opts.quality = q;\n    return this;\n  };\n\n  Builder.prototype.useImage = function(image) {\n    this.opts.Image = image;\n    return this;\n  };\n\n  Builder.prototype.useGenerator = function(generator) {\n    this.opts.generator = generator;\n    return this;\n  };\n\n  Builder.prototype.useQuantizer = function(quantizer) {\n    this.opts.Quantizer = quantizer;\n    return this;\n  };\n\n  Builder.prototype.build = function() {\n    if (this.v == null) {\n      this.v = new Vibrant(this.src, this.opts);\n    }\n    return this.v;\n  };\n\n  Builder.prototype.getSwatches = function(cb) {\n    return this.build().getPalette(cb);\n  };\n\n  Builder.prototype.getPalette = function(cb) {\n    return this.build().getPalette(cb);\n  };\n\n  Builder.prototype.from = function(src) {\n    return new Vibrant(src, this.opts);\n  };\n\n  return Builder;\n\n})();\n\nmodule.exports.Util = util;\n\nmodule.exports.Swatch = Swatch;\n\nmodule.exports.Quantizer = require('./quantizer/');\n\nmodule.exports.Generator = require('./generator/');\n\nmodule.exports.Filter = require('./filter/');\n","/home/travis/build/npmtest/node-npmtest-node-vibrant/node_modules/node-vibrant/lib/swatch.js":"var Swatch, util;\n\nutil = require('./util');\n\n\n/*\n  From Vibrant.js by Jari Zwarts\n  Ported to node.js by AKFish\n\n  Swatch class\n */\n\nmodule.exports = Swatch = (function() {\n  Swatch.prototype.hsl = void 0;\n\n  Swatch.prototype.rgb = void 0;\n\n  Swatch.prototype.population = 1;\n\n  Swatch.prototype.yiq = 0;\n\n  function Swatch(rgb, population) {\n    this.rgb = rgb;\n    this.population = population;\n  }\n\n  Swatch.prototype.getHsl = function() {\n    if (!this.hsl) {\n      return this.hsl = util.rgbToHsl(this.rgb[0], this.rgb[1], this.rgb[2]);\n    } else {\n      return this.hsl;\n    }\n  };\n\n  Swatch.prototype.getPopulation = function() {\n    return this.population;\n  };\n\n  Swatch.prototype.getRgb = function() {\n    return this.rgb;\n  };\n\n  Swatch.prototype.getHex = function() {\n    return util.rgbToHex(this.rgb[0], this.rgb[1], this.rgb[2]);\n  };\n\n  Swatch.prototype.getTitleTextColor = function() {\n    this._ensureTextColors();\n    if (this.yiq < 200) {\n      return \"#fff\";\n    } else {\n      return \"#000\";\n    }\n  };\n\n  Swatch.prototype.getBodyTextColor = function() {\n    this._ensureTextColors();\n    if (this.yiq < 150) {\n      return \"#fff\";\n    } else {\n      return \"#000\";\n    }\n  };\n\n  Swatch.prototype._ensureTextColors = function() {\n    if (!this.yiq) {\n      return this.yiq = (this.rgb[0] * 299 + this.rgb[1] * 587 + this.rgb[2] * 114) / 1000;\n    }\n  };\n\n  return Swatch;\n\n})();\n","/home/travis/build/npmtest/node-npmtest-node-vibrant/node_modules/node-vibrant/lib/util.js":"var DELTAE94, RSHIFT, SIGBITS;\n\nDELTAE94 = {\n  NA: 0,\n  PERFECT: 1,\n  CLOSE: 2,\n  GOOD: 10,\n  SIMILAR: 50\n};\n\nSIGBITS = 5;\n\nRSHIFT = 8 - SIGBITS;\n\nmodule.exports = {\n  clone: function(o) {\n    var _o, key, value;\n    if (typeof o === 'object') {\n      if (Array.isArray(o)) {\n        return o.map((function(_this) {\n          return function(v) {\n            return _this.clone(v);\n          };\n        })(this));\n      } else {\n        _o = {};\n        for (key in o) {\n          value = o[key];\n          _o[key] = this.clone(value);\n        }\n        return _o;\n      }\n    }\n    return o;\n  },\n  defaults: function() {\n    var _o, i, key, len, o, value;\n    o = {};\n    for (i = 0, len = arguments.length; i < len; i++) {\n      _o = arguments[i];\n      for (key in _o) {\n        value = _o[key];\n        if (o[key] == null) {\n          o[key] = this.clone(value);\n        }\n      }\n    }\n    return o;\n  },\n  hexToRgb: function(hex) {\n    var m;\n    m = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    if (m != null) {\n      return [m[1], m[2], m[3]].map(function(s) {\n        return parseInt(s, 16);\n      });\n    }\n    return null;\n  },\n  rgbToHex: function(r, g, b) {\n    return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1, 7);\n  },\n  rgbToHsl: function(r, g, b) {\n    var d, h, l, max, min, s;\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    max = Math.max(r, g, b);\n    min = Math.min(r, g, b);\n    h = void 0;\n    s = void 0;\n    l = (max + min) / 2;\n    if (max === min) {\n      h = s = 0;\n    } else {\n      d = max - min;\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n      switch (max) {\n        case r:\n          h = (g - b) / d + (g < b ? 6 : 0);\n          break;\n        case g:\n          h = (b - r) / d + 2;\n          break;\n        case b:\n          h = (r - g) / d + 4;\n      }\n      h /= 6;\n    }\n    return [h, s, l];\n  },\n  hslToRgb: function(h, s, l) {\n    var b, g, hue2rgb, p, q, r;\n    r = void 0;\n    g = void 0;\n    b = void 0;\n    hue2rgb = function(p, q, t) {\n      if (t < 0) {\n        t += 1;\n      }\n      if (t > 1) {\n        t -= 1;\n      }\n      if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n      }\n      if (t < 1 / 2) {\n        return q;\n      }\n      if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n      }\n      return p;\n    };\n    if (s === 0) {\n      r = g = b = l;\n    } else {\n      q = l < 0.5 ? l * (1 + s) : l + s - (l * s);\n      p = 2 * l - q;\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - (1 / 3));\n    }\n    return [r * 255, g * 255, b * 255];\n  },\n  rgbToXyz: function(r, g, b) {\n    var x, y, z;\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    r = r > 0.04045 ? Math.pow((r + 0.005) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.005) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.005) / 1.055, 2.4) : b / 12.92;\n    r *= 100;\n    g *= 100;\n    b *= 100;\n    x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x, y, z];\n  },\n  xyzToCIELab: function(x, y, z) {\n    var L, REF_X, REF_Y, REF_Z, a, b;\n    REF_X = 95.047;\n    REF_Y = 100;\n    REF_Z = 108.883;\n    x /= REF_X;\n    y /= REF_Y;\n    z /= REF_Z;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    L = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [L, a, b];\n  },\n  rgbToCIELab: function(r, g, b) {\n    var ref, x, y, z;\n    ref = this.rgbToXyz(r, g, b), x = ref[0], y = ref[1], z = ref[2];\n    return this.xyzToCIELab(x, y, z);\n  },\n  deltaE94: function(lab1, lab2) {\n    var L1, L2, WEIGHT_C, WEIGHT_H, WEIGHT_L, a1, a2, b1, b2, dL, da, db, xC1, xC2, xDC, xDE, xDH, xDL, xSC, xSH;\n    WEIGHT_L = 1;\n    WEIGHT_C = 1;\n    WEIGHT_H = 1;\n    L1 = lab1[0], a1 = lab1[1], b1 = lab1[2];\n    L2 = lab2[0], a2 = lab2[1], b2 = lab2[2];\n    dL = L1 - L2;\n    da = a1 - a2;\n    db = b1 - b2;\n    xC1 = Math.sqrt(a1 * a1 + b1 * b1);\n    xC2 = Math.sqrt(a2 * a2 + b2 * b2);\n    xDL = L2 - L1;\n    xDC = xC2 - xC1;\n    xDE = Math.sqrt(dL * dL + da * da + db * db);\n    if (Math.sqrt(xDE) > Math.sqrt(Math.abs(xDL)) + Math.sqrt(Math.abs(xDC))) {\n      xDH = Math.sqrt(xDE * xDE - xDL * xDL - xDC * xDC);\n    } else {\n      xDH = 0;\n    }\n    xSC = 1 + 0.045 * xC1;\n    xSH = 1 + 0.015 * xC1;\n    xDL /= WEIGHT_L;\n    xDC /= WEIGHT_C * xSC;\n    xDH /= WEIGHT_H * xSH;\n    return Math.sqrt(xDL * xDL + xDC * xDC + xDH * xDH);\n  },\n  rgbDiff: function(rgb1, rgb2) {\n    var lab1, lab2;\n    lab1 = this.rgbToCIELab.apply(this, rgb1);\n    lab2 = this.rgbToCIELab.apply(this, rgb2);\n    return this.deltaE94(lab1, lab2);\n  },\n  hexDiff: function(hex1, hex2) {\n    var rgb1, rgb2;\n    rgb1 = this.hexToRgb(hex1);\n    rgb2 = this.hexToRgb(hex2);\n    return this.rgbDiff(rgb1, rgb2);\n  },\n  DELTAE94_DIFF_STATUS: DELTAE94,\n  getColorDiffStatus: function(d) {\n    if (d < DELTAE94.NA) {\n      return \"N/A\";\n    }\n    if (d <= DELTAE94.PERFECT) {\n      return \"Perfect\";\n    }\n    if (d <= DELTAE94.CLOSE) {\n      return \"Close\";\n    }\n    if (d <= DELTAE94.GOOD) {\n      return \"Good\";\n    }\n    if (d < DELTAE94.SIMILAR) {\n      return \"Similar\";\n    }\n    return \"Wrong\";\n  },\n  SIGBITS: SIGBITS,\n  RSHIFT: RSHIFT,\n  getColorIndex: function(r, g, b) {\n    return (r << (2 * SIGBITS)) + (g << SIGBITS) + b;\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-node-vibrant/node_modules/node-vibrant/lib/generator/index.js":"var Generator;\n\nmodule.exports = Generator = (function() {\n  function Generator() {}\n\n  Generator.prototype.generate = function(swatches) {};\n\n  Generator.prototype.getVibrantSwatch = function() {};\n\n  Generator.prototype.getLightVibrantSwatch = function() {};\n\n  Generator.prototype.getDarkVibrantSwatch = function() {};\n\n  Generator.prototype.getMutedSwatch = function() {};\n\n  Generator.prototype.getLightMutedSwatch = function() {};\n\n  Generator.prototype.getDarkMutedSwatch = function() {};\n\n  return Generator;\n\n})();\n\nmodule.exports.Default = require('./default');\n","/home/travis/build/npmtest/node-npmtest-node-vibrant/node_modules/node-vibrant/lib/generator/default.js":"var DefaultGenerator, DefaultOpts, Generator, Swatch, util,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty,\n  slice = [].slice;\n\nSwatch = require('../swatch');\n\nutil = require('../util');\n\nGenerator = require('./index');\n\nDefaultOpts = {\n  targetDarkLuma: 0.26,\n  maxDarkLuma: 0.45,\n  minLightLuma: 0.55,\n  targetLightLuma: 0.74,\n  minNormalLuma: 0.3,\n  targetNormalLuma: 0.5,\n  maxNormalLuma: 0.7,\n  targetMutesSaturation: 0.3,\n  maxMutesSaturation: 0.4,\n  targetVibrantSaturation: 1.0,\n  minVibrantSaturation: 0.35,\n  weightSaturation: 3,\n  weightLuma: 6,\n  weightPopulation: 1\n};\n\nmodule.exports = DefaultGenerator = (function(superClass) {\n  extend(DefaultGenerator, superClass);\n\n  DefaultGenerator.prototype.HighestPopulation = 0;\n\n  function DefaultGenerator(opts) {\n    this.opts = util.defaults(opts, DefaultOpts);\n    this.VibrantSwatch = null;\n    this.LightVibrantSwatch = null;\n    this.DarkVibrantSwatch = null;\n    this.MutedSwatch = null;\n    this.LightMutedSwatch = null;\n    this.DarkMutedSwatch = null;\n  }\n\n  DefaultGenerator.prototype.generate = function(swatches) {\n    this.swatches = swatches;\n    this.maxPopulation = this.findMaxPopulation;\n    this.generateVarationColors();\n    return this.generateEmptySwatches();\n  };\n\n  DefaultGenerator.prototype.getVibrantSwatch = function() {\n    return this.VibrantSwatch;\n  };\n\n  DefaultGenerator.prototype.getLightVibrantSwatch = function() {\n    return this.LightVibrantSwatch;\n  };\n\n  DefaultGenerator.prototype.getDarkVibrantSwatch = function() {\n    return this.DarkVibrantSwatch;\n  };\n\n  DefaultGenerator.prototype.getMutedSwatch = function() {\n    return this.MutedSwatch;\n  };\n\n  DefaultGenerator.prototype.getLightMutedSwatch = function() {\n    return this.LightMutedSwatch;\n  };\n\n  DefaultGenerator.prototype.getDarkMutedSwatch = function() {\n    return this.DarkMutedSwatch;\n  };\n\n  DefaultGenerator.prototype.generateVarationColors = function() {\n    this.VibrantSwatch = this.findColorVariation(this.opts.targetNormalLuma, this.opts.minNormalLuma, this.opts.maxNormalLuma, this.opts.targetVibrantSaturation, this.opts.minVibrantSaturation, 1);\n    this.LightVibrantSwatch = this.findColorVariation(this.opts.targetLightLuma, this.opts.minLightLuma, 1, this.opts.targetVibrantSaturation, this.opts.minVibrantSaturation, 1);\n    this.DarkVibrantSwatch = this.findColorVariation(this.opts.targetDarkLuma, 0, this.opts.maxDarkLuma, this.opts.targetVibrantSaturation, this.opts.minVibrantSaturation, 1);\n    this.MutedSwatch = this.findColorVariation(this.opts.targetNormalLuma, this.opts.minNormalLuma, this.opts.maxNormalLuma, this.opts.targetMutesSaturation, 0, this.opts.maxMutesSaturation);\n    this.LightMutedSwatch = this.findColorVariation(this.opts.targetLightLuma, this.opts.minLightLuma, 1, this.opts.targetMutesSaturation, 0, this.opts.maxMutesSaturation);\n    return this.DarkMutedSwatch = this.findColorVariation(this.opts.targetDarkLuma, 0, this.opts.maxDarkLuma, this.opts.targetMutesSaturation, 0, this.opts.maxMutesSaturation);\n  };\n\n  DefaultGenerator.prototype.generateEmptySwatches = function() {\n    var hsl;\n    if (this.VibrantSwatch === null) {\n      if (this.DarkVibrantSwatch !== null) {\n        hsl = this.DarkVibrantSwatch.getHsl();\n        hsl[2] = this.opts.targetNormalLuma;\n        this.VibrantSwatch = new Swatch(util.hslToRgb(hsl[0], hsl[1], hsl[2]), 0);\n      }\n    }\n    if (this.DarkVibrantSwatch === null) {\n      if (this.VibrantSwatch !== null) {\n        hsl = this.VibrantSwatch.getHsl();\n        hsl[2] = this.opts.targetDarkLuma;\n        return this.DarkVibrantSwatch = new Swatch(util.hslToRgb(hsl[0], hsl[1], hsl[2]), 0);\n      }\n    }\n  };\n\n  DefaultGenerator.prototype.findMaxPopulation = function() {\n    var j, len, population, ref, swatch;\n    population = 0;\n    ref = this.swatches;\n    for (j = 0, len = ref.length; j < len; j++) {\n      swatch = ref[j];\n      population = Math.max(population, swatch.getPopulation());\n    }\n    return population;\n  };\n\n  DefaultGenerator.prototype.findColorVariation = function(targetLuma, minLuma, maxLuma, targetSaturation, minSaturation, maxSaturation) {\n    var j, len, luma, max, maxValue, ref, sat, swatch, value;\n    max = null;\n    maxValue = 0;\n    ref = this.swatches;\n    for (j = 0, len = ref.length; j < len; j++) {\n      swatch = ref[j];\n      sat = swatch.getHsl()[1];\n      luma = swatch.getHsl()[2];\n      if (sat >= minSaturation && sat <= maxSaturation && luma >= minLuma && luma <= maxLuma && !this.isAlreadySelected(swatch)) {\n        value = this.createComparisonValue(sat, targetSaturation, luma, targetLuma, swatch.getPopulation(), this.HighestPopulation);\n        if (max === null || value > maxValue) {\n          max = swatch;\n          maxValue = value;\n        }\n      }\n    }\n    return max;\n  };\n\n  DefaultGenerator.prototype.createComparisonValue = function(saturation, targetSaturation, luma, targetLuma, population, maxPopulation) {\n    return this.weightedMean(this.invertDiff(saturation, targetSaturation), this.opts.weightSaturation, this.invertDiff(luma, targetLuma), this.opts.weightLuma, population / maxPopulation, this.opts.weightPopulation);\n  };\n\n  DefaultGenerator.prototype.invertDiff = function(value, targetValue) {\n    return 1 - Math.abs(value - targetValue);\n  };\n\n  DefaultGenerator.prototype.weightedMean = function() {\n    var i, sum, sumWeight, value, values, weight;\n    values = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    sum = 0;\n    sumWeight = 0;\n    i = 0;\n    while (i < values.length) {\n      value = values[i];\n      weight = values[i + 1];\n      sum += value * weight;\n      sumWeight += weight;\n      i += 2;\n    }\n    return sum / sumWeight;\n  };\n\n  DefaultGenerator.prototype.isAlreadySelected = function(swatch) {\n    return this.VibrantSwatch === swatch || this.DarkVibrantSwatch === swatch || this.LightVibrantSwatch === swatch || this.MutedSwatch === swatch || this.DarkMutedSwatch === swatch || this.LightMutedSwatch === swatch;\n  };\n\n  return DefaultGenerator;\n\n})(Generator);\n","/home/travis/build/npmtest/node-npmtest-node-vibrant/node_modules/node-vibrant/lib/filter/index.js":"module.exports.Default = require('./default');\n","/home/travis/build/npmtest/node-npmtest-node-vibrant/node_modules/node-vibrant/lib/filter/default.js":"module.exports = function(r, g, b, a) {\n  return a >= 125 && !(r > 250 && g > 250 && b > 250);\n};\n","/home/travis/build/npmtest/node-npmtest-node-vibrant/node_modules/node-vibrant/lib/quantizer/index.js":"var Quantizer;\n\nmodule.exports = Quantizer = (function() {\n  function Quantizer() {}\n\n  Quantizer.prototype.initialize = function(pixels, opts) {};\n\n  Quantizer.prototype.getQuantizedColors = function() {};\n\n  return Quantizer;\n\n})();\n\nmodule.exports.MMCQ = require('./mmcq');\n","/home/travis/build/npmtest/node-npmtest-node-vibrant/node_modules/node-vibrant/lib/quantizer/mmcq.js":"var MMCQ, MMCQImpl, Quantizer, Swatch,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nSwatch = require('../swatch');\n\nQuantizer = require('./index');\n\nMMCQImpl = require('./impl/mmcq');\n\nmodule.exports = MMCQ = (function(superClass) {\n  extend(MMCQ, superClass);\n\n  function MMCQ() {\n    return MMCQ.__super__.constructor.apply(this, arguments);\n  }\n\n  MMCQ.prototype.initialize = function(pixels, opts) {\n    var mmcq;\n    this.opts = opts;\n    mmcq = new MMCQImpl();\n    return this.swatches = mmcq.quantize(pixels, this.opts);\n  };\n\n  MMCQ.prototype.getQuantizedColors = function() {\n    return this.swatches;\n  };\n\n  return MMCQ;\n\n})(Quantizer);\n","/home/travis/build/npmtest/node-npmtest-node-vibrant/node_modules/node-vibrant/lib/quantizer/impl/mmcq.js":"var MMCQ, PQueue, RSHIFT, SIGBITS, Swatch, VBox, getColorIndex, ref, util;\n\nref = util = require('../../util'), getColorIndex = ref.getColorIndex, SIGBITS = ref.SIGBITS, RSHIFT = ref.RSHIFT;\n\nSwatch = require('../../swatch');\n\nVBox = require('./vbox');\n\nPQueue = require('./pqueue');\n\nmodule.exports = MMCQ = (function() {\n  MMCQ.DefaultOpts = {\n    maxIterations: 1000,\n    fractByPopulations: 0.75\n  };\n\n  function MMCQ(opts) {\n    this.opts = util.defaults(opts, this.constructor.DefaultOpts);\n  }\n\n  MMCQ.prototype.quantize = function(pixels, opts) {\n    var color, colorCount, hist, pq, pq2, shouldIgnore, swatches, v, vbox;\n    if (pixels.length === 0 || opts.colorCount < 2 || opts.colorCount > 256) {\n      throw new Error(\"Wrong MMCQ parameters\");\n    }\n    shouldIgnore = function() {\n      return false;\n    };\n    if (Array.isArray(opts.filters) && opts.filters.length > 0) {\n      shouldIgnore = function(r, g, b, a) {\n        var f, i, len, ref1;\n        ref1 = opts.filters;\n        for (i = 0, len = ref1.length; i < len; i++) {\n          f = ref1[i];\n          if (!f(r, g, b, a)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    vbox = VBox.build(pixels, shouldIgnore);\n    hist = vbox.hist;\n    colorCount = Object.keys(hist).length;\n    pq = new PQueue(function(a, b) {\n      return a.count() - b.count();\n    });\n    pq.push(vbox);\n    this._splitBoxes(pq, this.opts.fractByPopulations * opts.colorCount);\n    pq2 = new PQueue(function(a, b) {\n      return a.count() * a.volume() - b.count() * b.volume();\n    });\n    pq2.contents = pq.contents;\n    this._splitBoxes(pq2, opts.colorCount - pq2.size());\n    swatches = [];\n    this.vboxes = [];\n    while (pq2.size()) {\n      v = pq2.pop();\n      color = v.avg();\n      if (!(typeof shouldIgnore === \"function\" ? shouldIgnore(color[0], color[1], color[2], 255) : void 0)) {\n        this.vboxes.push(v);\n        swatches.push(new Swatch(color, v.count()));\n      }\n    }\n    return swatches;\n  };\n\n  MMCQ.prototype._splitBoxes = function(pq, target) {\n    var colorCount, iteration, maxIterations, ref1, vbox, vbox1, vbox2;\n    colorCount = 1;\n    iteration = 0;\n    maxIterations = this.opts.maxIterations;\n    while (iteration < maxIterations) {\n      iteration++;\n      vbox = pq.pop();\n      if (!vbox.count()) {\n        continue;\n      }\n      ref1 = vbox.split(), vbox1 = ref1[0], vbox2 = ref1[1];\n      pq.push(vbox1);\n      if (vbox2) {\n        pq.push(vbox2);\n        colorCount++;\n      }\n      if (colorCount >= target || iteration > maxIterations) {\n        return;\n      }\n    }\n  };\n\n  return MMCQ;\n\n})();\n","/home/travis/build/npmtest/node-npmtest-node-vibrant/node_modules/node-vibrant/lib/quantizer/impl/vbox.js":"var RSHIFT, SIGBITS, VBox, getColorIndex, ref, util;\n\nref = util = require('../../util'), getColorIndex = ref.getColorIndex, SIGBITS = ref.SIGBITS, RSHIFT = ref.RSHIFT;\n\nmodule.exports = VBox = (function() {\n  VBox.build = function(pixels, shouldIgnore) {\n    var a, b, bmax, bmin, g, gmax, gmin, hist, hn, i, index, n, offset, r, rmax, rmin;\n    hn = 1 << (3 * SIGBITS);\n    hist = new Uint32Array(hn);\n    rmax = gmax = bmax = 0;\n    rmin = gmin = bmin = Number.MAX_VALUE;\n    n = pixels.length / 4;\n    i = 0;\n    while (i < n) {\n      offset = i * 4;\n      i++;\n      r = pixels[offset + 0];\n      g = pixels[offset + 1];\n      b = pixels[offset + 2];\n      a = pixels[offset + 3];\n      if (shouldIgnore(r, g, b, a)) {\n        continue;\n      }\n      r = r >> RSHIFT;\n      g = g >> RSHIFT;\n      b = b >> RSHIFT;\n      index = getColorIndex(r, g, b);\n      hist[index] += 1;\n      if (r > rmax) {\n        rmax = r;\n      }\n      if (r < rmin) {\n        rmin = r;\n      }\n      if (g > gmax) {\n        gmax = g;\n      }\n      if (g < gmin) {\n        gmin = g;\n      }\n      if (b > bmax) {\n        bmax = b;\n      }\n      if (b < bmin) {\n        bmin = b;\n      }\n    }\n    return new VBox(rmin, rmax, gmin, gmax, bmin, bmax, hist);\n  };\n\n  function VBox(r1, r2, g1, g2, b1, b2, hist1) {\n    this.r1 = r1;\n    this.r2 = r2;\n    this.g1 = g1;\n    this.g2 = g2;\n    this.b1 = b1;\n    this.b2 = b2;\n    this.hist = hist1;\n  }\n\n  VBox.prototype.invalidate = function() {\n    delete this._count;\n    delete this._avg;\n    return delete this._volume;\n  };\n\n  VBox.prototype.volume = function() {\n    if (this._volume == null) {\n      this._volume = (this.r2 - this.r1 + 1) * (this.g2 - this.g1 + 1) * (this.b2 - this.b1 + 1);\n    }\n    return this._volume;\n  };\n\n  VBox.prototype.count = function() {\n    var c, hist;\n    if (this._count == null) {\n      hist = this.hist;\n      c = 0;\n      \n      for (var r = this.r1; r <= this.r2; r++) {\n        for (var g = this.g1; g <= this.g2; g++) {\n          for (var b = this.b1; b <= this.b2; b++) {\n            var index = getColorIndex(r, g, b);\n            c += hist[index];\n          }\n        }\n      }\n      ;\n      this._count = c;\n    }\n    return this._count;\n  };\n\n  VBox.prototype.clone = function() {\n    return new VBox(this.r1, this.r2, this.g1, this.g2, this.b1, this.b2, this.hist);\n  };\n\n  VBox.prototype.avg = function() {\n    var bsum, gsum, hist, mult, ntot, rsum;\n    if (this._avg == null) {\n      hist = this.hist;\n      ntot = 0;\n      mult = 1 << (8 - SIGBITS);\n      rsum = gsum = bsum = 0;\n      \n      for (var r = this.r1; r <= this.r2; r++) {\n        for (var g = this.g1; g <= this.g2; g++) {\n          for (var b = this.b1; b <= this.b2; b++) {\n            var index = getColorIndex(r, g, b);\n            var h = hist[index];\n            ntot += h;\n            rsum += (h * (r + 0.5) * mult);\n            gsum += (h * (g + 0.5) * mult);\n            bsum += (h * (b + 0.5) * mult);\n          }\n        }\n      }\n      ;\n      if (ntot) {\n        this._avg = [~~(rsum / ntot), ~~(gsum / ntot), ~~(bsum / ntot)];\n      } else {\n        this._avg = [~~(mult * (this.r1 + this.r2 + 1) / 2), ~~(mult * (this.g1 + this.g2 + 1) / 2), ~~(mult * (this.b1 + this.b2 + 1) / 2)];\n      }\n    }\n    return this._avg;\n  };\n\n  VBox.prototype.split = function() {\n    var accSum, bw, d, doCut, gw, hist, i, j, maxd, maxw, ref1, reverseSum, rw, splitPoint, sum, total, vbox;\n    hist = this.hist;\n    if (!this.count()) {\n      return null;\n    }\n    if (this.count() === 1) {\n      return [this.clone()];\n    }\n    rw = this.r2 - this.r1 + 1;\n    gw = this.g2 - this.g1 + 1;\n    bw = this.b2 - this.b1 + 1;\n    maxw = Math.max(rw, gw, bw);\n    accSum = null;\n    sum = total = 0;\n    maxd = null;\n    switch (maxw) {\n      case rw:\n        maxd = 'r';\n        accSum = new Uint32Array(this.r2 + 1);\n        \n        for (var r = this.r1; r <= this.r2; r++) {\n          sum = 0\n          for (var g = this.g1; g <= this.g2; g++) {\n            for (var b = this.b1; b <= this.b2; b++) {\n              var index = getColorIndex(r, g, b);\n              sum += hist[index];\n            }\n          }\n          total += sum;\n          accSum[r] = total;\n        }\n        ;\n        break;\n      case gw:\n        maxd = 'g';\n        accSum = new Uint32Array(this.g2 + 1);\n        \n        for (var g = this.g1; g <= this.g2; g++) {\n          sum = 0\n          for (var r = this.r1; r <= this.r2; r++) {\n            for (var b = this.b1; b <= this.b2; b++) {\n              var index = getColorIndex(r, g, b);\n              sum += hist[index];\n            }\n          }\n          total += sum;\n          accSum[g] = total;\n        }\n        ;\n        break;\n      case bw:\n        maxd = 'b';\n        accSum = new Uint32Array(this.b2 + 1);\n        \n        for (var b = this.b1; b <= this.b2; b++) {\n          sum = 0\n          for (var r = this.r1; r <= this.r2; r++) {\n            for (var g = this.g1; g <= this.g2; g++) {\n              var index = getColorIndex(r, g, b);\n              sum += hist[index];\n            }\n          }\n          total += sum;\n          accSum[b] = total;\n        }\n        ;\n    }\n    splitPoint = -1;\n    reverseSum = new Uint32Array(accSum.length);\n    for (i = j = 0, ref1 = accSum.length - 1; 0 <= ref1 ? j <= ref1 : j >= ref1; i = 0 <= ref1 ? ++j : --j) {\n      d = accSum[i];\n      if (splitPoint < 0 && d > total / 2) {\n        splitPoint = i;\n      }\n      reverseSum[i] = total - d;\n    }\n    vbox = this;\n    doCut = function(d) {\n      var c2, d1, d2, dim1, dim2, left, right, vbox1, vbox2;\n      dim1 = d + \"1\";\n      dim2 = d + \"2\";\n      d1 = vbox[dim1];\n      d2 = vbox[dim2];\n      vbox1 = vbox.clone();\n      vbox2 = vbox.clone();\n      left = splitPoint - d1;\n      right = d2 - splitPoint;\n      if (left <= right) {\n        d2 = Math.min(d2 - 1, ~~(splitPoint + right / 2));\n        d2 = Math.max(0, d2);\n      } else {\n        d2 = Math.max(d1, ~~(splitPoint - 1 - left / 2));\n        d2 = Math.min(vbox[dim2], d2);\n      }\n      while (!accSum[d2]) {\n        d2++;\n      }\n      c2 = reverseSum[d2];\n      while (!c2 && accSum[d2 - 1]) {\n        c2 = reverseSum[--d2];\n      }\n      vbox1[dim2] = d2;\n      vbox2[dim1] = d2 + 1;\n      return [vbox1, vbox2];\n    };\n    return doCut(maxd);\n  };\n\n  VBox.prototype.contains = function(p) {\n    var b, g, r;\n    r = p[0] >> RSHIFT;\n    g = p[1] >> RSHIFT;\n    b = p[2] >> RSHIFT;\n    return r >= this.r1 && r <= this.r2 && g >= this.g1 && g <= this.g2 && b >= this.b1 && b <= this.b2;\n  };\n\n  return VBox;\n\n})();\n","/home/travis/build/npmtest/node-npmtest-node-vibrant/node_modules/node-vibrant/lib/quantizer/impl/pqueue.js":"var PQueue;\n\nmodule.exports = PQueue = (function() {\n  function PQueue(comparator) {\n    this.comparator = comparator;\n    this.contents = [];\n    this.sorted = false;\n  }\n\n  PQueue.prototype._sort = function() {\n    this.contents.sort(this.comparator);\n    return this.sorted = true;\n  };\n\n  PQueue.prototype.push = function(o) {\n    this.contents.push(o);\n    return this.sorted = false;\n  };\n\n  PQueue.prototype.peek = function(index) {\n    if (!this.sorted) {\n      this._sort();\n    }\n    if (index == null) {\n      index = this.contents.length - 1;\n    }\n    return this.contents[index];\n  };\n\n  PQueue.prototype.pop = function() {\n    if (!this.sorted) {\n      this._sort();\n    }\n    return this.contents.pop();\n  };\n\n  PQueue.prototype.size = function() {\n    return this.contents.length;\n  };\n\n  PQueue.prototype.map = function(f) {\n    if (!this.sorted) {\n      this._sort();\n    }\n    return this.contents.map(f);\n  };\n\n  return PQueue;\n\n})();\n","/home/travis/build/npmtest/node-npmtest-node-vibrant/node_modules/node-vibrant/lib/image/node.js":"var Image, Jimp, JimpImage, ProtocolHandler, URL_REGEX,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nImage = require('./index');\n\nJimp = require('jimp');\n\nURL_REGEX = /^(\\w+):\\/\\/.*/i;\n\nProtocolHandler = {\n  http: require('http'),\n  https: require('https')\n};\n\nJimpImage = (function(superClass) {\n  extend(JimpImage, superClass);\n\n  function JimpImage(path, cb) {\n    var handler, m, protocol;\n    m = URL_REGEX.exec(path);\n    if (m) {\n      protocol = m[1].toLowerCase();\n      handler = ProtocolHandler[protocol];\n      if (handler == null) {\n        throw new Error(\"Unsupported protocol: '\" + protocol + \"'\");\n      }\n      handler.get(path, (function(_this) {\n        return function(r) {\n          var buff;\n          buff = new Buffer('');\n          r.on('data', function(data) {\n            return buff = Buffer.concat([buff, data]);\n          });\n          return r.on('end', function() {\n            return new Jimp(buff, function(err, image) {\n              if (err != null) {\n                return typeof cb === \"function\" ? cb(err) : void 0;\n              }\n              _this.img = image;\n              return typeof cb === \"function\" ? cb(null, _this) : void 0;\n            });\n          });\n        };\n      })(this));\n    } else {\n      new Jimp(path, (function(_this) {\n        return function(err, image) {\n          if (err != null) {\n            return typeof cb === \"function\" ? cb(err) : void 0;\n          }\n          _this.img = image;\n          return typeof cb === \"function\" ? cb(null, _this) : void 0;\n        };\n      })(this));\n    }\n  }\n\n  JimpImage.prototype.clear = function() {};\n\n  JimpImage.prototype.update = function(imageData) {};\n\n  JimpImage.prototype.getWidth = function() {\n    return this.img.bitmap.width;\n  };\n\n  JimpImage.prototype.getHeight = function() {\n    return this.img.bitmap.height;\n  };\n\n  JimpImage.prototype.resize = function(w, h) {\n    return this.img.resize(w, h);\n  };\n\n  JimpImage.prototype.getPixelCount = function() {\n    return this.img.bitmap.width * this.img.bitmap.height;\n  };\n\n  JimpImage.prototype.getImageData = function() {\n    return {\n      data: this.img.bitmap.data\n    };\n  };\n\n  JimpImage.prototype.removeCanvas = function() {};\n\n  return JimpImage;\n\n})(Image);\n\nmodule.exports = JimpImage;\n","/home/travis/build/npmtest/node-npmtest-node-vibrant/node_modules/node-vibrant/lib/image/index.js":"var Image;\n\nmodule.exports = Image = (function() {\n  function Image() {}\n\n  Image.prototype.clear = function() {};\n\n  Image.prototype.update = function(imageData) {};\n\n  Image.prototype.getWidth = function() {};\n\n  Image.prototype.getHeight = function() {};\n\n  Image.prototype.scaleDown = function(opts) {\n    var height, maxSide, ratio, width;\n    width = this.getWidth();\n    height = this.getHeight();\n    ratio = 1;\n    if (opts.maxDimension != null) {\n      maxSide = Math.max(width, height);\n      if (maxSide > opts.maxDimension) {\n        ratio = opts.maxDimension / maxSide;\n      }\n    } else {\n      ratio = 1 / opts.quality;\n    }\n    if (ratio < 1) {\n      return this.resize(width * ratio, height * ratio, ratio);\n    }\n  };\n\n  Image.prototype.resize = function(w, h, r) {};\n\n  Image.prototype.getPixelCount = function() {};\n\n  Image.prototype.getImageData = function() {};\n\n  Image.prototype.removeCanvas = function() {};\n\n  return Image;\n\n})();\n","/home/travis/build/npmtest/node-npmtest-node-vibrant/node_modules/node-vibrant/lib/browser.js":"var Vibrant;\n\nVibrant = require('./vibrant');\n\nVibrant.DefaultOpts.Image = require('./image/browser');\n\nmodule.exports = Vibrant;\n","/home/travis/build/npmtest/node-npmtest-node-vibrant/node_modules/node-vibrant/lib/image/browser.js":"var BrowserImage, Image, Url, isRelativeUrl, isSameOrigin,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nImage = require('./index');\n\nUrl = require('url');\n\nisRelativeUrl = function(url) {\n  var u;\n  u = Url.parse(url);\n  return u.protocol === null && u.host === null && u.port === null;\n};\n\nisSameOrigin = function(a, b) {\n  var ua, ub;\n  ua = Url.parse(a);\n  ub = Url.parse(b);\n  return ua.protocol === ub.protocol && ua.hostname === ub.hostname && ua.port === ub.port;\n};\n\nmodule.exports = BrowserImage = (function(superClass) {\n  extend(BrowserImage, superClass);\n\n  function BrowserImage(path, cb) {\n    if (typeof path === 'object' && path instanceof HTMLImageElement) {\n      this.img = path;\n      path = this.img.src;\n    } else {\n      this.img = document.createElement('img');\n      this.img.src = path;\n    }\n    if (!isRelativeUrl(path) && !isSameOrigin(window.location.href, path)) {\n      this.img.crossOrigin = 'anonymous';\n    }\n    this.img.onload = (function(_this) {\n      return function() {\n        _this._initCanvas();\n        return typeof cb === \"function\" ? cb(null, _this) : void 0;\n      };\n    })(this);\n    if (this.img.complete) {\n      this.img.onload();\n    }\n    this.img.onerror = (function(_this) {\n      return function(e) {\n        var err;\n        err = new Error(\"Fail to load image: \" + path);\n        err.raw = e;\n        return typeof cb === \"function\" ? cb(err) : void 0;\n      };\n    })(this);\n  }\n\n  BrowserImage.prototype._initCanvas = function() {\n    this.canvas = document.createElement('canvas');\n    this.context = this.canvas.getContext('2d');\n    document.body.appendChild(this.canvas);\n    this.width = this.canvas.width = this.img.width;\n    this.height = this.canvas.height = this.img.height;\n    return this.context.drawImage(this.img, 0, 0, this.width, this.height);\n  };\n\n  BrowserImage.prototype.clear = function() {\n    return this.context.clearRect(0, 0, this.width, this.height);\n  };\n\n  BrowserImage.prototype.getWidth = function() {\n    return this.width;\n  };\n\n  BrowserImage.prototype.getHeight = function() {\n    return this.height;\n  };\n\n  BrowserImage.prototype.resize = function(w, h, r) {\n    this.width = this.canvas.width = w;\n    this.height = this.canvas.height = h;\n    this.context.scale(r, r);\n    return this.context.drawImage(this.img, 0, 0);\n  };\n\n  BrowserImage.prototype.update = function(imageData) {\n    return this.context.putImageData(imageData, 0, 0);\n  };\n\n  BrowserImage.prototype.getPixelCount = function() {\n    return this.width * this.height;\n  };\n\n  BrowserImage.prototype.getImageData = function() {\n    return this.context.getImageData(0, 0, this.width, this.height);\n  };\n\n  BrowserImage.prototype.removeCanvas = function() {\n    return this.canvas.parentNode.removeChild(this.canvas);\n  };\n\n  return BrowserImage;\n\n})(Image);\n","/home/travis/build/npmtest/node-npmtest-node-vibrant/node_modules/node-vibrant/lib/bundle.js":"var Vibrant;\n\nwindow.Vibrant = Vibrant = require('./browser');\n"}